import { VERSION, SecurityContext, Pipe, NgModule } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TrustHtmlPipe {
    /**
     * @param {?} sanitizer
     */
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    /**
     * @param {?} htmlString
     * @return {?}
     */
    transform(htmlString) {
        /** @type {?} */
        let result;
        if (!VERSION || VERSION.major === '2') {
            result = this.sanitizer.bypassSecurityTrustHtml(htmlString);
        }
        else {
            result = this.sanitizer.sanitize(SecurityContext.HTML, htmlString);
        }
        return result;
    }
}
TrustHtmlPipe.decorators = [
    { type: Pipe, args: [{
                name: 'trustHtml'
            },] }
];
/** @nocollapse */
TrustHtmlPipe.ctorParameters = () => [
    { type: DomSanitizer }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TrustHtmlModule {
}
TrustHtmlModule.decorators = [
    { type: NgModule, args: [{
                declarations: [TrustHtmlPipe],
                imports: [],
                exports: [TrustHtmlPipe]
            },] }
];

export { TrustHtmlModule, TrustHtmlPipe };
//# sourceMappingURL=trust-html.js.map
