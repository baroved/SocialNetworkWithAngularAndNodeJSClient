{"version":3,"sources":["ng://trust-html/lib/trust-html.pipe.ts","ng://trust-html/lib/trust-html.module.ts"],"names":["TrustHtmlPipe","sanitizer","this","prototype","transform","htmlString","VERSION","major","sanitize","SecurityContext","HTML","bypassSecurityTrustHtml","Pipe","args","name","DomSanitizer","TrustHtmlModule","NgModule","declarations","imports","exports"],"mappings":"oWAAA,IAAAA,EAAA,WAQE,SAAAA,EAAoBC,GAAAC,KAAAD,UAAAA,EAetB,OAZED,EAAAG,UAAAC,UAAA,SAAUC,GASR,OANKC,EAAAA,SAA6B,MAAlBA,EAAAA,QAAQC,MAGbL,KAAKD,UAAUO,SAASC,EAAAA,gBAAgBC,KAAML,GAF9CH,KAAKD,UAAUU,wBAAwBN,wBAZrDO,EAAAA,KAAIC,KAAA,CAAC,CACJC,KAAM,yDAHCC,EAAAA,gBAsBTf,EAvBA,GCAAgB,EAAA,WAGA,SAAAA,KAM+B,2BAN9BC,EAAAA,SAAQJ,KAAA,CAAC,CACRK,aAAc,CAAClB,GACfmB,QAAS,GAETC,QAAS,CAACpB,OAEmBgB,EAT/B","sourcesContent":["import { Pipe, PipeTransform, SecurityContext, VERSION } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'trustHtml'\n})\nexport class TrustHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {\n  }\n\n  transform(htmlString: string): any {\n    let result;\n\n    if (!VERSION || VERSION.major === '2') {\n      result = this.sanitizer.bypassSecurityTrustHtml(htmlString);\n    } else {\n      result = this.sanitizer.sanitize(SecurityContext.HTML, htmlString);\n    }\n\n    return result;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TrustHtmlPipe } from './trust-html.pipe';\n\n@NgModule({\n  declarations: [TrustHtmlPipe],\n  imports: [\n  ],\n  exports: [TrustHtmlPipe]\n})\nexport class TrustHtmlModule { }\n"]}