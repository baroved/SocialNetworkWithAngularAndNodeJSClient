(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :
    typeof define === 'function' && define.amd ? define('trust-html', ['exports', '@angular/core', '@angular/platform-browser'], factory) :
    (global = global || self, factory(global['trust-html'] = {}, global.ng.core, global.ng.platformBrowser));
}(this, function (exports, core, platformBrowser) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var TrustHtmlPipe = /** @class */ (function () {
        function TrustHtmlPipe(sanitizer) {
            this.sanitizer = sanitizer;
        }
        /**
         * @param {?} htmlString
         * @return {?}
         */
        TrustHtmlPipe.prototype.transform = /**
         * @param {?} htmlString
         * @return {?}
         */
        function (htmlString) {
            /** @type {?} */
            var result;
            if (!core.VERSION || core.VERSION.major === '2') {
                result = this.sanitizer.bypassSecurityTrustHtml(htmlString);
            }
            else {
                result = this.sanitizer.sanitize(core.SecurityContext.HTML, htmlString);
            }
            return result;
        };
        TrustHtmlPipe.decorators = [
            { type: core.Pipe, args: [{
                        name: 'trustHtml'
                    },] }
        ];
        /** @nocollapse */
        TrustHtmlPipe.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        return TrustHtmlPipe;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var TrustHtmlModule = /** @class */ (function () {
        function TrustHtmlModule() {
        }
        TrustHtmlModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [TrustHtmlPipe],
                        imports: [],
                        exports: [TrustHtmlPipe]
                    },] }
        ];
        return TrustHtmlModule;
    }());

    exports.TrustHtmlModule = TrustHtmlModule;
    exports.TrustHtmlPipe = TrustHtmlPipe;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=trust-html.umd.js.map
