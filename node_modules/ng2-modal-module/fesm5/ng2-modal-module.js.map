{"version":3,"file":"ng2-modal-module.js","sources":["ng://ng2-modal-module/lib/ng2-modal-window.ts","ng://ng2-modal-module/lib/ng2-modal-window/ng2-modal-window.component.ts","ng://ng2-modal-module/lib/modal.module.ts"],"sourcesContent":["import { PubSubDistinct } from 'pubsub-distinct';\n\nexport class Ng2ModalWindow {\n\n  static showModal(modalId: string, options: any = {}): void {\n    options.show = true;\n    options.hide = null;\n    PubSubDistinct.publishDistinct(modalId, options);\n  }\n\n  static hideModal(modalId: string): void {\n    let options: any = {hide: true};\n    PubSubDistinct.publishDistinct(modalId, options);\n  }\n\n  static resetEventsSubscribers(eventsList: any[]): void {\n    eventsList.forEach((eventName: string) => {\n      if (eventName && PubSubDistinct.hasSubscribers(eventName)) {\n        PubSubDistinct.dispose(eventName);\n      }\n    });\n  }\n\n  static subscribe(eventName: string, callback: (data?: any) => any): void {\n    PubSubDistinct.subscribe(eventName, callback);\n  }\n}\n","import {\n  Component,\n  ComponentRef,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport { ComponentInjector } from 'component-injector';\nimport { PubSubDistinct, Subscription } from 'pubsub-distinct';\nimport { XDomUtil } from 'xdom-util';\n\n@Component({\n  selector: 'ng2-modal-window',\n  templateUrl: './ng2-modal-window.component.html',\n  styleUrls: ['./ng2-modal-window.component.css']\n})\nexport class Ng2ModalWindowComponent implements OnInit, OnDestroy {\n  @ViewChild('modalWindow', {static: true}) modalWindow: ElementRef;\n  @ViewChild('injectContainer', {read: ViewContainerRef, static: true}) injectContainer: ViewContainerRef;\n  @Input() animationClass: string = 'fade';\n  protected showModalClass: string = 'in';\n  protected bodyOpenModalClass: string = 'modal-open';\n  protected eventSubscriber: Subscription;\n  protected injectedComponentRef: ComponentRef<any>;\n  protected defaultProperties: any = {\n    title: '',\n    show: false,\n    showEvent: false,\n    hide: false,\n    componentSelector: false,\n    componentInputs: false,\n    htmlContent: '',\n    overlayClick: true,\n    customClass: '',\n    buttons: {\n      visible: true,\n      cancel: {\n        visible: true,\n        label: 'Cancel',\n        event: false\n      },\n      success: {\n        visible: true,\n        label: 'Save',\n        event: false\n      }\n    }\n  };\n  properties: any = {};\n  protected eventName: string;\n\n  constructor(protected componentInjector: ComponentInjector) {\n  }\n\n  @Input() set id(eventName: string) {\n    if (eventName) {\n      this.eventName = eventName;\n      // remove previous subscription and create new one\n      this.unsubscribe();\n      this.subscribeToEvent();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe();\n    this.resetInjectedComponent();\n  }\n\n  cancelAction(): void {\n    if (this.properties.buttons.cancel.event) {\n      PubSubDistinct.publishDistinct(this.properties.buttons.cancel.event, true);\n    }\n    this.hide();\n  }\n\n  successAction(): void {\n    if (this.properties.buttons.success.event) {\n      PubSubDistinct.publishDistinct(this.properties.buttons.success.event, true);\n    }\n    else {\n      this.hide();\n    }\n  }\n\n  overlayClick(): void {\n    if (this.properties.overlayClick) {\n      this.cancelAction();\n    }\n  }\n\n  protected show(): void {\n    // add class to modal DOM element to make it visible\n    let modalDom = this.modalWindow.nativeElement;\n    if (!XDomUtil.hasClass(modalDom, this.showModalClass)) {\n      XDomUtil.addClass(modalDom, this.showModalClass);\n    }\n\n    // add class to modal body to disable the scrolling\n    let body = document.querySelector('body');\n    if (!XDomUtil.hasClass(body, this.bodyOpenModalClass)) {\n      XDomUtil.addClass(body, this.bodyOpenModalClass);\n    }\n\n    if (this.properties.showEvent) {\n      PubSubDistinct.publishDistinct(this.properties.showEvent, true);\n    }\n  }\n\n  protected hide(): void {\n    let element = this.modalWindow.nativeElement;\n    XDomUtil.removeClass(element, this.showModalClass);\n\n    let body = document.querySelector('body');\n    XDomUtil.removeClass(body, this.bodyOpenModalClass);\n  }\n\n\n  protected subscribeToEvent(): void {\n    this.eventSubscriber = PubSubDistinct.subscribe(this.eventName, (data: any) => {\n      this.initModal(data);\n    });\n  }\n\n  protected initModal(properties: any): void {\n    if (properties.show) {\n      // remove previously injected component\n      this.resetInjectedComponent();\n      // reset the properties\n      this.setProperties(properties);\n      // inject component\n      if (this.properties.componentSelector) {\n        this.injectedComponentRef = this.injectComponent(this.properties.componentSelector);\n        // set the components properties\n        this.setComponentProperties();\n      }\n      // display the modal\n      this.show();\n      // reset modal event subscriber\n      this.resetModalEventSubscriber();\n    }\n    else if (properties.hide) {\n      // remove previously injected component\n      this.resetInjectedComponent();\n      // reset the properties\n      this.setProperties(properties);\n      // hide the modal\n      this.hide();\n      // reset modal event subscriber\n      this.resetModalEventSubscriber();\n    }\n  }\n\n  protected unsubscribe(): void {\n    if (this.eventSubscriber) {\n      PubSubDistinct.unsubscribe(this.eventSubscriber);\n    }\n  }\n\n  protected injectComponent(componentSelector: string): ComponentRef<any> {\n    let result: ComponentRef<any>;\n    if (componentSelector) {\n      result = this.componentInjector.inject(this.injectContainer, componentSelector);\n    }\n\n    return result;\n  }\n\n  protected setComponentProperties(): void {\n    if (this.properties.componentInputs && this.injectedComponentRef) {\n      this.componentInjector.setProperties(this.injectedComponentRef, this.properties.componentInputs);\n    }\n  }\n\n  private resetInjectedComponent(): void {\n    if (this.injectedComponentRef) {\n      this.componentInjector.remove(this.injectedComponentRef);\n      this.injectedComponentRef = null;\n    }\n  }\n\n  private setProperties(properties: any): void {\n    this.properties = {...this.defaultProperties, ...properties};\n  }\n\n  private resetModalEventSubscriber(): void {\n    // reset modal show/hide display\n    PubSubDistinct.publishDistinct(this.eventName, {});\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TrustHtmlModule } from 'trust-html';\nimport { Ng2ModalWindowComponent } from './ng2-modal-window/ng2-modal-window.component';\n\n@NgModule({\n  declarations: [Ng2ModalWindowComponent],\n  imports: [\n    CommonModule,\n    TrustHtmlModule\n  ],\n  exports: [Ng2ModalWindowComponent]\n})\nexport class ModalModule { }\n"],"names":[],"mappings":"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"}