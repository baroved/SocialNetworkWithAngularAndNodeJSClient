/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { PubSubDistinct } from 'pubsub-distinct';
var Ng2ModalWindow = /** @class */ (function () {
    function Ng2ModalWindow() {
    }
    /**
     * @param {?} modalId
     * @param {?=} options
     * @return {?}
     */
    Ng2ModalWindow.showModal = /**
     * @param {?} modalId
     * @param {?=} options
     * @return {?}
     */
    function (modalId, options) {
        if (options === void 0) { options = {}; }
        options.show = true;
        options.hide = null;
        PubSubDistinct.publishDistinct(modalId, options);
    };
    /**
     * @param {?} modalId
     * @return {?}
     */
    Ng2ModalWindow.hideModal = /**
     * @param {?} modalId
     * @return {?}
     */
    function (modalId) {
        /** @type {?} */
        var options = { hide: true };
        PubSubDistinct.publishDistinct(modalId, options);
    };
    /**
     * @param {?} eventsList
     * @return {?}
     */
    Ng2ModalWindow.resetEventsSubscribers = /**
     * @param {?} eventsList
     * @return {?}
     */
    function (eventsList) {
        eventsList.forEach((/**
         * @param {?} eventName
         * @return {?}
         */
        function (eventName) {
            if (eventName && PubSubDistinct.hasSubscribers(eventName)) {
                PubSubDistinct.dispose(eventName);
            }
        }));
    };
    /**
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */
    Ng2ModalWindow.subscribe = /**
     * @param {?} eventName
     * @param {?} callback
     * @return {?}
     */
    function (eventName, callback) {
        PubSubDistinct.subscribe(eventName, callback);
    };
    return Ng2ModalWindow;
}());
export { Ng2ModalWindow };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmcyLW1vZGFsLXdpbmRvdy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nMi1tb2RhbC1tb2R1bGUvIiwic291cmNlcyI6WyJsaWIvbmcyLW1vZGFsLXdpbmRvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWpEO0lBQUE7SUF3QkEsQ0FBQzs7Ozs7O0lBdEJRLHdCQUFTOzs7OztJQUFoQixVQUFpQixPQUFlLEVBQUUsT0FBaUI7UUFBakIsd0JBQUEsRUFBQSxZQUFpQjtRQUNqRCxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNwQixPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNwQixjQUFjLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNuRCxDQUFDOzs7OztJQUVNLHdCQUFTOzs7O0lBQWhCLFVBQWlCLE9BQWU7O1lBQzFCLE9BQU8sR0FBUSxFQUFDLElBQUksRUFBRSxJQUFJLEVBQUM7UUFDL0IsY0FBYyxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7Ozs7SUFFTSxxQ0FBc0I7Ozs7SUFBN0IsVUFBOEIsVUFBaUI7UUFDN0MsVUFBVSxDQUFDLE9BQU87Ozs7UUFBQyxVQUFDLFNBQWlCO1lBQ25DLElBQUksU0FBUyxJQUFJLGNBQWMsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3pELGNBQWMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDbkM7UUFDSCxDQUFDLEVBQUMsQ0FBQztJQUNMLENBQUM7Ozs7OztJQUVNLHdCQUFTOzs7OztJQUFoQixVQUFpQixTQUFpQixFQUFFLFFBQTZCO1FBQy9ELGNBQWMsQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFDSCxxQkFBQztBQUFELENBQUMsQUF4QkQsSUF3QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQdWJTdWJEaXN0aW5jdCB9IGZyb20gJ3B1YnN1Yi1kaXN0aW5jdCc7XG5cbmV4cG9ydCBjbGFzcyBOZzJNb2RhbFdpbmRvdyB7XG5cbiAgc3RhdGljIHNob3dNb2RhbChtb2RhbElkOiBzdHJpbmcsIG9wdGlvbnM6IGFueSA9IHt9KTogdm9pZCB7XG4gICAgb3B0aW9ucy5zaG93ID0gdHJ1ZTtcbiAgICBvcHRpb25zLmhpZGUgPSBudWxsO1xuICAgIFB1YlN1YkRpc3RpbmN0LnB1Ymxpc2hEaXN0aW5jdChtb2RhbElkLCBvcHRpb25zKTtcbiAgfVxuXG4gIHN0YXRpYyBoaWRlTW9kYWwobW9kYWxJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgbGV0IG9wdGlvbnM6IGFueSA9IHtoaWRlOiB0cnVlfTtcbiAgICBQdWJTdWJEaXN0aW5jdC5wdWJsaXNoRGlzdGluY3QobW9kYWxJZCwgb3B0aW9ucyk7XG4gIH1cblxuICBzdGF0aWMgcmVzZXRFdmVudHNTdWJzY3JpYmVycyhldmVudHNMaXN0OiBhbnlbXSk6IHZvaWQge1xuICAgIGV2ZW50c0xpc3QuZm9yRWFjaCgoZXZlbnROYW1lOiBzdHJpbmcpID0+IHtcbiAgICAgIGlmIChldmVudE5hbWUgJiYgUHViU3ViRGlzdGluY3QuaGFzU3Vic2NyaWJlcnMoZXZlbnROYW1lKSkge1xuICAgICAgICBQdWJTdWJEaXN0aW5jdC5kaXNwb3NlKGV2ZW50TmFtZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgc3Vic2NyaWJlKGV2ZW50TmFtZTogc3RyaW5nLCBjYWxsYmFjazogKGRhdGE/OiBhbnkpID0+IGFueSk6IHZvaWQge1xuICAgIFB1YlN1YkRpc3RpbmN0LnN1YnNjcmliZShldmVudE5hbWUsIGNhbGxiYWNrKTtcbiAgfVxufVxuIl19